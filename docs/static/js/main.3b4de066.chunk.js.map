{"version":3,"sources":["serviceWorker.js","store/reducers/appReducer.js","store/types.js","store/reducers/userReducer.js","store/reducers/newsReducer.js","store/rootReducer.js","store/store.js","views/Main.js","components/Article.js","store/actions/newsActions.js","views/News.js","store/actions/appActions.js","store/actions/userActions.js","components/Navbar.js","components/PopupAuth.js","components/PopupArticle.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","showPopupAuth","showPopupArticle","appReducer","state","action","type","user","userReducer","payload","news","newsReducer","aNewArticles","id","length","dNewArticles","filter","i","idxTargetArticle","findIndex","eNewArticles","rootReducer","combineReducers","app","store","createStore","composeWithDevTools","applyMiddleware","thunk","Main","useSelector","className","login","Article","article","dispatch","useDispatch","title","text","isAdmin","approved","onClick","editNews","News","storeNews","useState","setNews","useEffect","filteredNews","authorId","map","key","fetchUser","Navbar","to","PopupAuth","showPopup","showError","setShowError","setLogin","password","setPassword","users","onChangeInput","e","currentTarget","name","value","onClickClose","onSubmit","preventDefault","find","onChange","placeholder","maxLength","autoComplete","style","display","PopupArticle","setTitle","setText","trim","withRouter","path","exact","component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3b4de066.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { TURN_POPUP_ARTICLE, TURN_POPUP_AUTH } from '../types'\n\nconst initialState = {\n  showPopupAuth: false,\n  showPopupArticle: false,\n}\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TURN_POPUP_AUTH:\n      return { ...state, showPopupAuth: !state.showPopupAuth }\n    case TURN_POPUP_ARTICLE:\n      return { ...state, showPopupArticle: !state.showPopupArticle }\n    default:\n      return state\n  }\n}\n\nexport default appReducer\n","export const TURN_POPUP_AUTH = 'APP/TURN_POPUP_AUTH'\nexport const TURN_POPUP_ARTICLE = 'APP/TURN_POPUP_ARTICLE'\nexport const FETCH_USER = 'USER/FETCH_USER'\nexport const FETCH_NEWS = 'NEWS/FETCH_NEWS'\nexport const ADD_NEWS = 'NEWS/ADD_NEWS'\nexport const DELETE_NEWS = 'NEWS/DELETE_NEWS'\nexport const EDIT_NEWS = 'NEWS/EDIT_NEWS'\n","import { FETCH_USER } from '../types'\r\n\r\nconst initialState = {\r\n  user: null,\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_USER:\r\n      return { ...state, user: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer\r\n","import { ADD_NEWS, DELETE_NEWS, EDIT_NEWS, FETCH_NEWS } from '../types'\n\nconst initialState = {\n  news: null,\n}\n\nconst newsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_NEWS:\n      return { ...state, news: action.payload }\n    case ADD_NEWS:\n      const aNewArticles = [{ id: state.news.length, ...action.payload }, ...state.news]\n      return { ...state, news: aNewArticles }\n    case DELETE_NEWS:\n      const dNewArticles = state.news.filter((i) => i.id !== action.payload)\n      return { ...state, news: dNewArticles }\n    case EDIT_NEWS:\n      const idxTargetArticle = state.news.findIndex((i) => i.id === action.payload.id)\n      const eNewArticles = [...state.news]\n      eNewArticles[idxTargetArticle] = action.payload\n      return { ...state, news: eNewArticles }\n    default:\n      return state\n  }\n}\n\nexport default newsReducer\n","import { combineReducers } from 'redux'\r\nimport appReducer from './reducers/appReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport newsReducer from \"./reducers/newsReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  app: appReducer,\r\n  user: userReducer,\r\n  news: newsReducer\r\n})\r\n","import { /*compose,*/ createStore, applyMiddleware } from 'redux'\r\nimport { rootReducer } from './rootReducer'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport const Main = () => {\n  const user = useSelector((state) => state.user.user)\n\n  return (\n    <>\n      <div className=\"page\">\n        <h2>Привет, {user ? user.login : 'Гость'}</h2>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { deleteNews, editNews } from '../store/actions/newsActions'\n\nexport const Article = ({ article }) => {\n  const dispatch = useDispatch()\n\n  const user = useSelector((state) => state.user.user)\n\n  const onClickApprove = () => dispatch(editNews({ ...article, approved: true }))\n  const onClickDelete = () => dispatch(deleteNews(article.id))\n\n  return (\n    <article className=\"article\">\n      <h2>{article.title}</h2>\n      <p>{article.text}</p>\n      {user && user.isAdmin && (\n        <div>\n          {!article.approved && (\n            <button onClick={() => onClickApprove()} className=\"button\">\n              Принять\n            </button>\n          )}\n          <button onClick={() => onClickDelete()} className=\"button\">\n            Удалить\n          </button>\n        </div>\n      )}\n    </article>\n  )\n}\n\nArticle.propTypes = {\n  article: PropTypes.object.isRequired,\n}\n","import { ADD_NEWS, DELETE_NEWS, EDIT_NEWS, FETCH_NEWS } from '../types'\n\nexport function fetchNews() {\n  const news = [\n    {\n      id: 0,\n      title: 'Новость 3',\n      text: 'Новость пользователя (не принята)',\n      approved: false,\n      authorId: 2,\n    },\n    {\n      id: 1,\n      title: 'Новость 1',\n      text: 'Новость админа',\n      approved: true,\n      authorId: 1,\n    },\n    {\n      id: 2,\n      title: 'Новость 2',\n      text: 'Новость пользователя',\n      approved: true,\n      authorId: 2,\n    },\n  ]\n  return { type: FETCH_NEWS, payload: news }\n}\n\nexport function addNews(article) {\n  return { type: ADD_NEWS, payload: article }\n}\nexport function deleteNews(articleId) {\n  return { type: DELETE_NEWS, payload: articleId }\n}\nexport function editNews(article) {\n  return { type: EDIT_NEWS, payload: article }\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Article } from '../components/Article'\nimport { turnPopupArticle } from '../store/actions/appActions'\n\nexport const News = () => {\n  const dispatch = useDispatch()\n\n  const [storeNews, user] = useSelector((state) => [state.news.news, state.user.user])\n  const [news, setNews] = useState([])\n\n  useEffect(() => {\n    let filteredNews = storeNews\n\n    if (user && !user.isAdmin)\n      filteredNews = filteredNews.filter((i) => i.approved || i.authorId === user.id)\n    else if (!user && filteredNews) filteredNews = filteredNews.filter((i) => i.approved)\n\n    setNews(filteredNews)\n  }, [storeNews, user])\n\n  const onClickNewArticle = () => dispatch(turnPopupArticle())\n\n  return (\n    <>\n      <div className=\"page\">\n        {user && (\n          <div className=\"page__buttons\">\n            <button onClick={() => onClickNewArticle()} className=\"button\">\n              Добавить новость\n            </button>\n          </div>\n        )}\n        <div className=\"articles\">\n          {news && news.map((i) => <Article key={i.id} article={i} />)}\n        </div>\n      </div>\n    </>\n  )\n}\n","import { TURN_POPUP_ARTICLE, TURN_POPUP_AUTH } from '../types'\n\nexport function turnPopupAuth() {\n  return { type: TURN_POPUP_AUTH }\n}\nexport function turnPopupArticle() {\n  return { type: TURN_POPUP_ARTICLE }\n}\n","import { FETCH_USER } from '../types'\r\n\r\nexport function fetchUser(user) {\r\n  return { type: FETCH_USER, payload: user }\r\n}\r\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { turnPopupAuth } from '../store/actions/appActions'\nimport { fetchUser } from '../store/actions/userActions'\n\nexport const Navbar = () => {\n  const dispatch = useDispatch()\n\n  const user = useSelector((state) => state.user.user)\n\n  return (\n    <nav className=\"nav\">\n      <Link className=\"nav__link\" to=\"/\">\n        Главная\n      </Link>\n      <Link className=\"nav__link\" to=\"/news\">\n        Новости\n      </Link>\n      {user ? (\n        <span onClick={() => dispatch(fetchUser(null))} className=\"nav__link\">\n          Выйти\n        </span>\n      ) : (\n        <span onClick={() => dispatch(turnPopupAuth())} className=\"nav__link\">\n          Войти\n        </span>\n      )}\n    </nav>\n  )\n}\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { turnPopupAuth } from '../store/actions/appActions'\nimport { fetchUser } from '../store/actions/userActions'\n\nexport const PopupAuth = () => {\n  const dispatch = useDispatch()\n\n  const showPopup = useSelector((state) => state.app.showPopupAuth)\n\n  const [showError, setShowError] = useState(false)\n  const [login, setLogin] = useState('')\n  const [password, setPassword] = useState('')\n\n  const users = [\n    {\n      id: 1,\n      login: 'admin',\n      password: 'admin',\n      isAdmin: true,\n    },\n    {\n      id: 2,\n      login: 'user',\n      password: 'user',\n      isAdmin: false,\n    },\n  ]\n\n  const onChangeInput = (e) => {\n    const { name, value } = e.currentTarget\n    if (name === 'login') setLogin(value)\n    else if (name === 'password') setPassword(value)\n  }\n  const onSubmit = (e) => {\n    e.preventDefault()\n    const user = users.find((user) => user.login === login && user.password === password)\n    if (!user) {\n      setShowError(true)\n      return\n    }\n    dispatch(fetchUser(user))\n    onClickClose()\n  }\n  const onClickClose = () => {\n    setShowError(false)\n    setLogin('')\n    setPassword('')\n    dispatch(turnPopupAuth())\n  }\n\n  return (\n    <div className={`popup ${showPopup && 'popup__show'}`}>\n      <div className=\"window\">\n        <h4 className=\"window__title\">Авторизация</h4>\n        <div className=\"form\">\n          <form onSubmit={(e) => onSubmit(e)}>\n            <input\n              onChange={(e) => onChangeInput(e)}\n              value={login}\n              name=\"login\"\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Введите логин\"\n              maxLength=\"50\"\n            />\n            <input\n              onChange={(e) => onChangeInput(e)}\n              value={password}\n              name=\"password\"\n              className=\"input\"\n              autoComplete=\"on\"\n              type=\"password\"\n              placeholder=\"Введите пароль\"\n              maxLength=\"50\"\n            />\n            <small className=\"form__error\" style={{ display: showError ? 'inline' : 'none' }}>\n              Логин или пароль введен неверно!\n            </small>\n            <div className=\"form__buttons\">\n              <button className=\"button\" type=\"submit\">\n                Войти\n              </button>\n              <button onClick={() => onClickClose()} type=\"button\" className=\"button\">\n                Отмена\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { turnPopupArticle } from '../store/actions/appActions'\nimport { addNews } from '../store/actions/newsActions'\n\nexport const PopupArticle = () => {\n  const dispatch = useDispatch()\n\n  const [showPopup, user] = useSelector((state) => [state.app.showPopupArticle, state.user.user])\n\n  const [showError, setShowError] = useState(false)\n  const [title, setTitle] = useState('')\n  const [text, setText] = useState('')\n\n  const onChangeInput = (e) => {\n    const { name, value } = e.currentTarget\n    if (name === 'title') setTitle(value)\n    else if (name === 'text') setText(value)\n  }\n  const onSubmit = (e) => {\n    e.preventDefault()\n    if (!title.trim() || !text.trim()) {\n      setShowError(true)\n      return\n    }\n    dispatch(\n      addNews({ title: title.trim(), text: text.trim(), approved: false, authorId: user.id }),\n    )\n    onClickClose()\n  }\n  const onClickClose = () => {\n    setShowError(false)\n    setTitle('')\n    setText('')\n    dispatch(turnPopupArticle())\n  }\n\n  return (\n    <div className={`popup ${showPopup && 'popup__show'}`}>\n      <div className=\"window\">\n        <h4 className=\"window__title\">Новая новость</h4>\n        <div className=\"form\">\n          <form onSubmit={(e) => onSubmit(e)}>\n            <input\n              onChange={(e) => onChangeInput(e)}\n              value={title}\n              name=\"title\"\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Введите заголовок\"\n              maxLength=\"50\"\n            />\n            <textarea\n              onChange={(e) => onChangeInput(e)}\n              name=\"text\"\n              value={text}\n              className=\"input\"\n              placeholder=\"Введите текст новости\"\n              maxLength=\"500\"\n            />\n            <small className=\"form__error\" style={{ display: showError ? 'inline' : 'none' }}>\n              Заполните все поля перед отправкой!\n            </small>\n            <div className=\"form__buttons\">\n              <button className=\"button\" type=\"submit\">\n                Отправить\n              </button>\n              <button onClick={() => onClickClose()} type=\"button\" className=\"button\">\n                Отмена\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport { Main } from './views/Main'\nimport { News } from './views/News'\nimport { Navbar } from './components/Navbar'\nimport { PopupAuth } from './components/PopupAuth'\nimport { fetchNews } from './store/actions/newsActions'\nimport { PopupArticle } from './components/PopupArticle'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchNews())\n  }, [dispatch])\n\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/news\" exact component={News} />\n      </Switch>\n      <PopupAuth />\n      <PopupArticle />\n    </>\n  )\n}\n\nexport default withRouter(App)\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport store from './store/store'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}