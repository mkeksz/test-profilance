{"version":3,"sources":["serviceWorker.js","store/reducers/appReducer.js","store/types.js","store/reducers/userReducer.js","store/reducers/newsReducer.js","store/rootReducer.js","store/store.js","views/Main.js","components/Article.js","store/actions/newsActions.js","views/News.js","store/actions/appActions.js","store/actions/userActions.js","components/Navbar.js","components/PopupAuth.js","components/PopupArticle.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","showPopupAuth","showPopupArticle","appReducer","state","action","type","user","userReducer","payload","news","newsReducer","aNewArticles","id","length","dNewArticles","filter","i","idxTargetArticle","findIndex","eNewArticles","rootReducer","combineReducers","app","store","createStore","composeWithDevTools","applyMiddleware","thunk","Main","useSelector","className","login","Article","article","dispatch","useDispatch","title","text","date","toLocaleDateString","isAdmin","approved","onClick","editNews","News","storeNews","useState","setNews","searchNews","setSearchNews","textSearch","setTextSearch","articles","useEffect","filteredNews","slice","authorId","toLowerCase","includes","trim","onChange","e","currentTarget","value","onChangeInput","name","placeholder","maxLength","map","key","fetchUser","Navbar","to","public_url","PopupAuth","showPopup","showError","setShowError","setLogin","password","setPassword","users","onClickClose","onSubmit","preventDefault","find","autoComplete","style","display","PopupArticle","setTitle","setText","Date","withRouter","path","exact","component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1aad54b3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { TURN_POPUP_ARTICLE, TURN_POPUP_AUTH } from '../types'\r\n\r\nconst initialState = {\r\n  showPopupAuth: false,\r\n  showPopupArticle: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TURN_POPUP_AUTH:\r\n      return { ...state, showPopupAuth: !state.showPopupAuth }\r\n    case TURN_POPUP_ARTICLE:\r\n      return { ...state, showPopupArticle: !state.showPopupArticle }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default appReducer\r\n","export const TURN_POPUP_AUTH = 'APP/TURN_POPUP_AUTH'\r\nexport const TURN_POPUP_ARTICLE = 'APP/TURN_POPUP_ARTICLE'\r\nexport const FETCH_USER = 'USER/FETCH_USER'\r\nexport const FETCH_NEWS = 'NEWS/FETCH_NEWS'\r\nexport const ADD_NEWS = 'NEWS/ADD_NEWS'\r\nexport const DELETE_NEWS = 'NEWS/DELETE_NEWS'\r\nexport const EDIT_NEWS = 'NEWS/EDIT_NEWS'\r\n","import { FETCH_USER } from '../types'\r\n\r\nconst initialState = {\r\n  user: null,\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_USER:\r\n      return { ...state, user: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer\r\n","import { ADD_NEWS, DELETE_NEWS, EDIT_NEWS, FETCH_NEWS } from '../types'\r\n\r\nconst initialState = {\r\n  news: [],\r\n}\r\n\r\nconst newsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_NEWS:\r\n      return { ...state, news: action.payload }\r\n    case ADD_NEWS:\r\n      const aNewArticles = [{ id: state.news.length, ...action.payload }, ...state.news]\r\n      return { ...state, news: aNewArticles }\r\n    case DELETE_NEWS:\r\n      const dNewArticles = state.news.filter((i) => i.id !== action.payload)\r\n      return { ...state, news: dNewArticles }\r\n    case EDIT_NEWS:\r\n      const idxTargetArticle = state.news.findIndex((i) => i.id === action.payload.id)\r\n      const eNewArticles = [...state.news]\r\n      eNewArticles[idxTargetArticle] = action.payload\r\n      return { ...state, news: eNewArticles }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default newsReducer\r\n","import { combineReducers } from 'redux'\r\nimport appReducer from './reducers/appReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport newsReducer from \"./reducers/newsReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  app: appReducer,\r\n  user: userReducer,\r\n  news: newsReducer\r\n})\r\n","import { /*compose,*/ createStore, applyMiddleware } from 'redux'\r\nimport { rootReducer } from './rootReducer'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const Main = () => {\r\n  const user = useSelector((state) => state.user.user)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page\">\r\n        <h2>Привет, {user ? user.login : 'Гость'}</h2>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { deleteNews, editNews } from '../store/actions/newsActions'\n\nexport const Article = ({ article }) => {\n  const dispatch = useDispatch()\n\n  const user = useSelector((state) => state.user.user)\n\n  const onClickApprove = () => dispatch(editNews({ ...article, approved: true }))\n  const onClickDelete = () => dispatch(deleteNews(article.id))\n\n  return (\n    <article className=\"article\">\n      <h2>{article.title}</h2>\n      <p>{article.text}</p>\n      <small>Создано {article.date.toLocaleDateString()}</small>\n      {user && user.isAdmin && (\n        <div>\n          {!article.approved && (\n            <button onClick={() => onClickApprove()} className=\"button\">\n              Принять\n            </button>\n          )}\n          <button onClick={() => onClickDelete()} className=\"button\">\n            Удалить\n          </button>\n        </div>\n      )}\n    </article>\n  )\n}\n\nArticle.propTypes = {\n  article: PropTypes.object.isRequired,\n}\n","import { ADD_NEWS, DELETE_NEWS, EDIT_NEWS, FETCH_NEWS } from '../types'\n\nexport function fetchNews() {\n  const news = [\n    {\n      id: 0,\n      title: 'Новость 3',\n      text: 'Новость пользователя (не принята)',\n      approved: false,\n      authorId: 2,\n      date: new Date(2020, 8, 15),\n    },\n    {\n      id: 1,\n      title: 'Новость 1',\n      text: 'Новость админа',\n      approved: true,\n      authorId: 1,\n      date: new Date(2020, 8, 14),\n    },\n    {\n      id: 2,\n      title: 'Новость 2',\n      text: 'Новость пользователя',\n      approved: true,\n      authorId: 2,\n      date: new Date(2020, 8, 10),\n    },\n  ]\n  return { type: FETCH_NEWS, payload: news }\n}\n\nexport function addNews(article) {\n  return { type: ADD_NEWS, payload: article }\n}\nexport function deleteNews(articleId) {\n  return { type: DELETE_NEWS, payload: articleId }\n}\nexport function editNews(article) {\n  return { type: EDIT_NEWS, payload: article }\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Article } from '../components/Article'\nimport { turnPopupArticle } from '../store/actions/appActions'\n\nexport const News = () => {\n  const dispatch = useDispatch()\n\n  const [storeNews, user] = useSelector((state) => [state.news.news, state.user.user])\n  const [news, setNews] = useState([])\n  const [searchNews, setSearchNews] = useState(news)\n  const [textSearch, setTextSearch] = useState('')\n\n  const articles = textSearch ? searchNews : news\n\n  useEffect(() => {\n    let filteredNews = storeNews.slice(0, 100)\n\n    if (user && !user.isAdmin)\n      filteredNews = filteredNews.filter((i) => i.approved || i.authorId === user.id)\n    else if (!user) filteredNews = filteredNews.filter((i) => i.approved)\n\n    setNews(filteredNews)\n  }, [storeNews, user])\n\n  useEffect(() => {\n    setSearchNews(\n      news.filter(\n        (i) =>\n          i.title.toLowerCase().includes(textSearch.toLowerCase().trim()) ||\n          i.text.toLowerCase().includes(textSearch.toLowerCase().trim()),\n      ),\n    )\n  }, [textSearch, news])\n\n  const onClickNewArticle = () => dispatch(turnPopupArticle())\n  const onChangeInput = (e) => setTextSearch(e.currentTarget.value)\n\n  return (\n    <>\n      <div className=\"page\">\n        {user && (\n          <div className=\"page__buttons\">\n            <button onClick={() => onClickNewArticle()} className=\"button\">\n              Добавить новость\n            </button>\n          </div>\n        )}\n        <div className=\"search\">\n          <input\n            onChange={(e) => onChangeInput(e)}\n            value={textSearch}\n            name=\"textSearch\"\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Поиск...\"\n            maxLength=\"50\"\n          />\n        </div>\n        <div className=\"articles\">\n          {articles.map((i) => (\n            <Article key={i.id} article={i} />\n          ))}\n        </div>\n      </div>\n    </>\n  )\n}\n","import { TURN_POPUP_ARTICLE, TURN_POPUP_AUTH } from '../types'\r\n\r\nexport function turnPopupAuth() {\r\n  return { type: TURN_POPUP_AUTH }\r\n}\r\nexport function turnPopupArticle() {\r\n  return { type: TURN_POPUP_ARTICLE }\r\n}\r\n","import { FETCH_USER } from '../types'\r\n\r\nexport function fetchUser(user) {\r\n  return { type: FETCH_USER, payload: user }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { turnPopupAuth } from '../store/actions/appActions'\r\nimport { fetchUser } from '../store/actions/userActions'\r\n\r\nexport const Navbar = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const user = useSelector((state) => state.user.user)\r\n\r\n  const public_url = process.env.PUBLIC_URL\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      <Link className=\"nav__link\" to={public_url + '/'}>\r\n        Главная\r\n      </Link>\r\n      <Link className=\"nav__link\" to={public_url + '/news'}>\r\n        Новости\r\n      </Link>\r\n      {user ? (\r\n        <span onClick={() => dispatch(fetchUser(null))} className=\"nav__link\">\r\n          Выйти\r\n        </span>\r\n      ) : (\r\n        <span onClick={() => dispatch(turnPopupAuth())} className=\"nav__link\">\r\n          Войти\r\n        </span>\r\n      )}\r\n    </nav>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { turnPopupAuth } from '../store/actions/appActions'\r\nimport { fetchUser } from '../store/actions/userActions'\r\n\r\nexport const PopupAuth = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const showPopup = useSelector((state) => state.app.showPopupAuth)\r\n\r\n  const [showError, setShowError] = useState(false)\r\n  const [login, setLogin] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const users = [\r\n    {\r\n      id: 1,\r\n      login: 'admin',\r\n      password: 'admin',\r\n      isAdmin: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      login: 'user',\r\n      password: 'user',\r\n      isAdmin: false,\r\n    },\r\n  ]\r\n\r\n  const onChangeInput = (e) => {\r\n    const { name, value } = e.currentTarget\r\n    if (name === 'login') setLogin(value)\r\n    else if (name === 'password') setPassword(value)\r\n  }\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    const user = users.find((user) => user.login === login && user.password === password)\r\n    if (!user) {\r\n      setShowError(true)\r\n      return\r\n    }\r\n    dispatch(fetchUser(user))\r\n    onClickClose()\r\n  }\r\n  const onClickClose = () => {\r\n    setShowError(false)\r\n    setLogin('')\r\n    setPassword('')\r\n    dispatch(turnPopupAuth())\r\n  }\r\n\r\n  return (\r\n    <div className={`popup ${showPopup && 'popup__show'}`}>\r\n      <div className=\"window\">\r\n        <h4 className=\"window__title\">Авторизация</h4>\r\n        <div className=\"form\">\r\n          <form onSubmit={(e) => onSubmit(e)}>\r\n            <input\r\n              onChange={(e) => onChangeInput(e)}\r\n              value={login}\r\n              name=\"login\"\r\n              className=\"input\"\r\n              type=\"text\"\r\n              placeholder=\"Введите логин\"\r\n              maxLength=\"50\"\r\n            />\r\n            <input\r\n              onChange={(e) => onChangeInput(e)}\r\n              value={password}\r\n              name=\"password\"\r\n              className=\"input\"\r\n              autoComplete=\"on\"\r\n              type=\"password\"\r\n              placeholder=\"Введите пароль\"\r\n              maxLength=\"50\"\r\n            />\r\n            <small className=\"form__error\" style={{ display: showError ? 'inline' : 'none' }}>\r\n              Логин или пароль введен неверно!\r\n            </small>\r\n            <div className=\"form__buttons\">\r\n              <button className=\"button\" type=\"submit\">\r\n                Войти\r\n              </button>\r\n              <button onClick={() => onClickClose()} type=\"button\" className=\"button\">\r\n                Отмена\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { turnPopupArticle } from '../store/actions/appActions'\nimport { addNews } from '../store/actions/newsActions'\n\nexport const PopupArticle = () => {\n  const dispatch = useDispatch()\n\n  const [showPopup, user] = useSelector((state) => [state.app.showPopupArticle, state.user.user])\n\n  const [showError, setShowError] = useState(false)\n  const [title, setTitle] = useState('')\n  const [text, setText] = useState('')\n\n  const onChangeInput = (e) => {\n    const { name, value } = e.currentTarget\n    if (name === 'title') setTitle(value)\n    else if (name === 'text') setText(value)\n  }\n  const onSubmit = (e) => {\n    e.preventDefault()\n    if (!title.trim() || !text.trim()) {\n      setShowError(true)\n      return\n    }\n    dispatch(\n      addNews({\n        title: title.trim(),\n        text: text.trim(),\n        approved: false,\n        authorId: user.id,\n        date: new Date(),\n      }),\n    )\n    onClickClose()\n  }\n  const onClickClose = () => {\n    setShowError(false)\n    setTitle('')\n    setText('')\n    dispatch(turnPopupArticle())\n  }\n\n  return (\n    <div className={`popup ${showPopup && 'popup__show'}`}>\n      <div className=\"window\">\n        <h4 className=\"window__title\">Новая новость</h4>\n        <div className=\"form\">\n          <form onSubmit={(e) => onSubmit(e)}>\n            <input\n              onChange={(e) => onChangeInput(e)}\n              value={title}\n              name=\"title\"\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Введите заголовок\"\n              maxLength=\"50\"\n            />\n            <textarea\n              onChange={(e) => onChangeInput(e)}\n              name=\"text\"\n              value={text}\n              className=\"input\"\n              placeholder=\"Введите текст новости\"\n              maxLength=\"500\"\n            />\n            <small className=\"form__error\" style={{ display: showError ? 'inline' : 'none' }}>\n              Заполните все поля перед отправкой!\n            </small>\n            <div className=\"form__buttons\">\n              <button className=\"button\" type=\"submit\">\n                Отправить\n              </button>\n              <button onClick={() => onClickClose()} type=\"button\" className=\"button\">\n                Отмена\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Route, Switch, withRouter } from 'react-router-dom'\r\nimport { Main } from './views/Main'\r\nimport { News } from './views/News'\r\nimport { Navbar } from './components/Navbar'\r\nimport { PopupAuth } from './components/PopupAuth'\r\nimport { fetchNews } from './store/actions/newsActions'\r\nimport { PopupArticle } from './components/PopupArticle'\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const public_url = process.env.PUBLIC_URL\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchNews())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path={public_url + '/'} exact component={Main} />\r\n        <Route path={public_url + '/news'} component={News} />\r\n      </Switch>\r\n      <PopupAuth />\r\n      <PopupArticle />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport store from './store/store'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}